# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Demo-gradle-project

on:
  workflow_dispatch:
    input:
      version:
        description: Demo project
        required: true

env:
  #ARTIFACT_FOLDER_NAME: ""
  AWS_REGION: "us-east-1"
  BUCKET: "my-tf-test-bucket-25072022"

jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        build-root-directory: 
        arguments: build
    
    - name: Gradle Build
      #uses: gradle/gradle-build-action@v2
      run: ./gradlew build
    
    - name: Publish test results
      uses: enricoMi/Publish-unit-test-result-action@v1
      if: always()
      with:
        files: "./build/test-results/**/*.xml"

    # - name: Gradle release
    #   uses: gradle/gradle-build-action@v2
    #   with:
    #     build-root-directory: 
    #     arguments: release -Prelease.customUsername=$GITHUB_ACTOR -Prelease.customPassword=${{ secrets.GITHUB_TOKEN }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    

    # - uses: actions/github-script@v6
    #   id: get-version
    #   with:
    #     script: |
    #       const { readdirSync } = require('fs')
    #       let dirs = readdirSync(process + '/build/distributions');
    #       let file = dirs.find(element => element.endsWith(".zip"));
    #       let match = /([0-9]+([.][0-9]+)+(-SNAPSHOT)?)/.exec(file);
    #       console.log("Found version: "+match[0])
    #       return match[0]
    #     result-encoding: string
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Upload to s3
      # env:
      #   VERSION: ${{ steps.get-version.outputs.result }}
      run: |
          aws s3 cp . s3://$BUCKET/ --recursive --exclude="*" --include="*.zip" --no-progress


      
         